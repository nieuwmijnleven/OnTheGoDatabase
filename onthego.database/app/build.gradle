/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

group = 'onthego.database'
version = '1.0.0'

sourceCompatibility = '17'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.5'
    testImplementation 'com.google.jimfs:jimfs:1.2'
    testImplementation 'org.mockito:mockito-inline:3.9.0'

    // This dependency is used by the application.
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
    //implementation 'com.google.guava:guava:32.1.3-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'onthego.database.console.SimpleConsole'
}

jar {
    manifest {
        attributes(
                'Main-Class': application.mainClass.get()
        )
    }

    // 필요한 경우, 의존성 JAR들을 포함하는 fat JAR 생성
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
